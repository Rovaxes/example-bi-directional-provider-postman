components:
  examples: {}
  headers: {}
  parameters: {}
  requestBodies: {}
  responses: {}
  schemas:
    ErrorResponse:
      properties:
        requestId:
          type: string
        errOrigin:
          type: string
        statusCode:
          type: number
          format: double
        error:
          type: string
        message:
          type: string
        errCode:
          type: string
        data:
          additionalProperties: false
          type: object
      type: object
      additionalProperties: false
    Lang:
      enum:
        - en
        - en_ca
        - en_CA
        - fr_ca
        - fr_CA
        - fr
      type: string
    health:
      type: object
      properties:
        name:
          type: string
          description: The name of the app
          example: category_api_microservice
        status:
          type: string
          description: the server status
          example: OK
          enum:
            - OK
        message:
          type: string
          description: a message of the server status
          example: Service is up and running.
        build:
          type: string
          description: a build number of the application
          example: 1.0.0
        uptime:
          type: integer
          description: an uptime of the application in milliseconds
          format: int64
  securitySchemes:
    cookieAuth:
      type: apiKey
      name: Access-Token
      in: cookie
info:
  title: '@cantire-corp/cds.passbook-experience-api'
  version: 1.11.2
  description: Passbook Experience API
  license:
    name: ISC
  contact:
    name: CDS Team
openapi: 3.0.0
paths:
  /api/v1/passbook:
    get:
      operationId: GetPassbook
      responses:
        '200':
          description: Returns a PDF or PK file
          content:
            application/vnd.apple.pkpass;charset=UTF-8:
              schema:
                type: string
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorResponse'
                required:
                  - error
                type: object
              examples:
                Example 1:
                  value:
                    error:
                      data: {}
                      errCode: '00000'
                      errOrigin: CDS
                      error: Bad Request
                      message: Invalid parameters
                      statusCode: 400
                      requestId: '0'
      description: Get passbook.
      security:
        - cookieAuth: []
      parameters:
        - description: base site id
          in: header
          name: baseSiteId
          required: false
          schema:
            type: string
          example: CTR
        - description: language en fr
          in: query
          name: lang
          required: false
          schema:
            $ref: '#/components/schemas/Lang'
  /health:
    get:
      tags:
        - health
      summary: The health status of the service
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/health'
        '500':
          description: Internal Server Error
          content: {}
servers:
  - url: /passbook
